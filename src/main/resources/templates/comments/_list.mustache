<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-modal-data='{"id":"{{id}}", "nickname":"{{nickname}}", "body":"{{body}}", "articleId":"{{articleId}}"}'>
                    수정
                </button>
                <button type="button"
                        class="btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">
                    삭제
                </button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!--댓글 작성 폼-->
                <form>
                    <!--닉네임 입력-->
                    <div class="mb-3">
                        <label for="edit-comment-nickname" class="form-label">닉네임</label>
                        <input type="text" class="form-control" id="edit-comment-nickname">
                    </div>
                    <!--댓글 본문 입력-->
                    <div class="mb-3">
                        <label for="edit-comment-body" class="form-label">댓글 내용</label>
                        <textarea class="form-control" id="edit-comment-body" rows="3">
                </textarea>
                    </div>
                    <!--히든 인풋-->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <!--전송-->
                    <button type="button" class="btn btn-primary" id="comment-edit-btn">댓글 수정</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    {
        const commentEditModal = document.querySelector('#comment-edit-modal');
        commentEditModal.addEventListener('show.bs.modal', (e) => {
            // 트리거 버튼 선택
            const triggerBtn = e.relatedTarget;
            // 데이터 가져오기
            const currentData = JSON.parse(triggerBtn.dataset.modalData);
            // 수정 폼에 데이터 반영
            document.querySelector('#edit-comment-id').value = currentData.id;
            document.querySelector('#edit-comment-nickname').value = currentData.nickname;
            document.querySelector('#edit-comment-body').value = currentData.body;
            document.querySelector('#edit-comment-article-id').value = currentData.articleId;
        });
    }
    {
        // 댓글 수정
        const commentEditBtn = document.querySelector('#comment-edit-btn');
        commentEditBtn.addEventListener('click', (e) => {
            const comment = {
                id: document.querySelector('#edit-comment-id').value,
                nickname: document.querySelector('#edit-comment-nickname').value,
                body: document.querySelector('#edit-comment-body').value,
                articleId: document.querySelector('#edit-comment-article-id').value
            };
            console.log(comment);

            const url = `/api/comments/${comment.id}`;
            fetch(url, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(comment)
            }).then(res => {
                // HTTP 응답 코드에 따른 메시지 출력
                const msg = (res.ok) ? "댓글이 수정되었습니다." : "댓글 수정 실패";
                alert(msg);
                location.reload();
            });
        })
    }
    {
        const commentDeleteBtns = document.querySelectorAll('.comment-delete-btn');
        commentDeleteBtns.forEach(
            btn => btn.addEventListener('click', (e) => {
                const commentDeleteBtn = e.target;
                const id = commentDeleteBtn.dataset.commentId;

                const url = `/api/comments/${id}`;
                fetch(url,{
                    method: 'DELETE',
                }).then(res => {
                    if(!res.ok) {
                        alert("댓글 삭제 실패");
                        return;
                    }
                    const target = document.querySelector(`#comments-${id}`);
                    target.remove();
                    alert("댓글이 삭제되었습니다.");
                })
        }))
    }
</script>